{"version":3,"sources":["../src/utils.js"],"names":["rootPath","ignoreFiles","explicitlyDelFiles","isSameFile","target","f","notNeedRemove","dir","startsWith","relativePath","replace","inExplicitlyDelFiles","some","inIgnoreFiles","initModuleVars","_ignoreFiles","_explicitlyDelFiles","rmdirSync","fileinfo","fs","statSync","isFile","unlinkSync","isDirectory","files","readdirSync","i","length","path","join"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEA,IAAIA,QAAQ,GAAG,IAAf;AACA,IAAIC,WAAW,GAAG,IAAlB;AACA,IAAIC,kBAAkB,GAAG,IAAzB;;AAEA,MAAMC,UAAU,GAAGC,MAAM,IAAIC,CAAC,IAC7BA,CAAC,KAAKD,MAAN,IAAiB,IAAGC,CAAE,EAAN,KAAYD,MAA5B,IAAuC,IAAGC,CAAE,EAAN,KAAa,GAAED,MAAO,GAD7D;;AAGA,MAAME,aAAa,GAAGC,GAAG,IAAI;AAC5B,MAAI,CAACP,QAAD,IAAa,CAACO,GAAG,CAACC,UAAJ,CAAeR,QAAf,CAAlB,EAA4C,OAAO,IAAP;AAE5C,QAAMS,YAAY,GAAGF,GAAG,CAACG,OAAJ,CAAYV,QAAZ,EAAsB,EAAtB,CAArB;AAEA,MAAIS,YAAY,KAAK,EAArB,EAAyB,OAAO,KAAP;;AAEzB,MAAI,CAAC,CAACP,kBAAN,EAA0B;AACzB,UAAMS,oBAAoB,GAAGT,kBAAkB,CAACU,IAAnB,CAC5BT,UAAU,CAACM,YAAD,CADkB,CAA7B;AAIA,WAAO,CAACE,oBAAR;AACA;;AAED,QAAME,aAAa,GAAGZ,WAAW,CAACW,IAAZ,CAAiBT,UAAU,CAACM,YAAD,CAA3B,CAAtB;AAEA,SAAOI,aAAP;AACA,CAlBD;;AAoBA,MAAMC,cAAc,GAAG,CAACP,GAAD,EAAMQ,YAAN,EAAoBC,mBAApB,KAA4C;AAClE,MAAI,CAAChB,QAAL,EAAeA,QAAQ,GAAGO,GAAX;AACf,MAAI,CAACN,WAAD,IAAgBc,YAApB,EAAkCd,WAAW,GAAGc,YAAd;AAClC,MAAI,CAACb,kBAAD,IAAuBc,mBAA3B,EACCd,kBAAkB,GAAGc,mBAArB;AACD,CALD;;AAOO,MAAMC,SAAS,GAAG,CAACV,GAAD,EAAMQ,YAAN,EAAoBC,mBAApB,KAA4C;AACpEF,EAAAA,cAAc,CAACP,GAAD,EAAMQ,YAAN,EAAoBC,mBAApB,CAAd;AAEA,MAAIV,aAAa,CAACC,GAAD,CAAjB,EAAwB;;AAExB,QAAMW,QAAQ,GAAGC,YAAGC,QAAH,CAAYb,GAAZ,CAAjB;;AACA,MAAIW,QAAQ,CAACG,MAAT,EAAJ,EAAuB;AACtBF,gBAAGG,UAAH,CAAcf,GAAd;AACA,GAFD,MAEO,IAAIW,QAAQ,CAACK,WAAT,EAAJ,EAA4B;AAClC,UAAMC,KAAK,GAAGL,YAAGM,WAAH,CAAelB,GAAf,CAAd;;AACA,SAAK,IAAImB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAAK,CAACG,MAA1B,EAAkCD,CAAC,EAAnC,EACCT,SAAS,CAACW,cAAKC,IAAL,CAAUtB,GAAV,EAAeiB,KAAK,CAACE,CAAD,CAApB,CAAD,CAAT;;AAEDnB,IAAAA,GAAG,KAAKP,QAAR,IAAoBmB,YAAGF,SAAH,CAAaV,GAAb,CAApB;AACA;AACD,CAfM","sourcesContent":["import path from 'path'\nimport fs from 'fs'\n\nlet rootPath = null\nlet ignoreFiles = null\nlet explicitlyDelFiles = null\n\nconst isSameFile = target => f =>\n\tf === target || `/${f}` === target || `/${f}` === `${target}/`\n\nconst notNeedRemove = dir => {\n\tif (!rootPath || !dir.startsWith(rootPath)) return true\n\n\tconst relativePath = dir.replace(rootPath, '')\n\n\tif (relativePath === '') return false\n\n\tif (!!explicitlyDelFiles) {\n\t\tconst inExplicitlyDelFiles = explicitlyDelFiles.some(\n\t\t\tisSameFile(relativePath)\n\t\t)\n\n\t\treturn !inExplicitlyDelFiles\n\t}\n\n\tconst inIgnoreFiles = ignoreFiles.some(isSameFile(relativePath))\n\n\treturn inIgnoreFiles\n}\n\nconst initModuleVars = (dir, _ignoreFiles, _explicitlyDelFiles) => {\n\tif (!rootPath) rootPath = dir\n\tif (!ignoreFiles && _ignoreFiles) ignoreFiles = _ignoreFiles\n\tif (!explicitlyDelFiles && _explicitlyDelFiles)\n\t\texplicitlyDelFiles = _explicitlyDelFiles\n}\n\nexport const rmdirSync = (dir, _ignoreFiles, _explicitlyDelFiles) => {\n\tinitModuleVars(dir, _ignoreFiles, _explicitlyDelFiles)\n\n\tif (notNeedRemove(dir)) return\n\n\tconst fileinfo = fs.statSync(dir)\n\tif (fileinfo.isFile()) {\n\t\tfs.unlinkSync(dir)\n\t} else if (fileinfo.isDirectory()) {\n\t\tconst files = fs.readdirSync(dir)\n\t\tfor (let i = 0; i < files.length; i++)\n\t\t\trmdirSync(path.join(dir, files[i]))\n\n\t\tdir === rootPath || fs.rmdirSync(dir)\n\t}\n}\n"],"file":"utils.js"}