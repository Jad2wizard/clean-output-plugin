{"version":3,"sources":["../src/utils.js"],"names":["rmdirSync","dir","fileinfo","fs","statSync","isFile","unlinkSync","isDirectory","files","readdirSync","i","length","path","join"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEO,MAAMA,SAAS,GAAGC,GAAG,IAAI;AAC/B,QAAMC,QAAQ,GAAGC,YAAGC,QAAH,CAAYH,GAAZ,CAAjB;;AACA,MAAIC,QAAQ,CAACG,MAAT,EAAJ,EAAuB;AACtBF,gBAAGG,UAAH,CAAcL,GAAd;AACA,GAFD,MAEO,IAAIC,QAAQ,CAACK,WAAT,EAAJ,EAA4B;AAClC,UAAMC,KAAK,GAAGL,YAAGM,WAAH,CAAeR,GAAf,CAAd;;AACA,SAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAAK,CAACG,MAA1B,EAAkCD,CAAC,EAAnC,EACCV,SAAS,CAACY,cAAKC,IAAL,CAAUZ,GAAV,EAAeO,KAAK,CAACE,CAAD,CAApB,CAAD,CAAT;;AACDP,gBAAGH,SAAH,CAAaC,GAAb;AACA;AACD,CAVM","sourcesContent":["import path from 'path'\nimport fs from 'fs'\n\nexport const rmdirSync = dir => {\n\tconst fileinfo = fs.statSync(dir)\n\tif (fileinfo.isFile()) {\n\t\tfs.unlinkSync(dir)\n\t} else if (fileinfo.isDirectory()) {\n\t\tconst files = fs.readdirSync(dir)\n\t\tfor (let i = 0; i < files.length; i++)\n\t\t\trmdirSync(path.join(dir, files[i]))\n\t\tfs.rmdirSync(dir)\n\t}\n}\n"],"file":"utils.js"}