{"version":3,"sources":["../src/utils.js"],"names":["rootPath","ignoreFiles","explicitlyDelFiles","isSameFile","target","f","path","resolve","notNeedRemove","dir","inExplicitlyDelFiles","some","inIgnoreFiles","initModuleVars","_ignoreFiles","_explicitlyDelFiles","rmdirSync","fileinfo","fs","statSync","isFile","unlinkSync","isDirectory","files","readdirSync","i","length","join"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEA,IAAIA,QAAQ,GAAG,IAAf;AACA,IAAIC,WAAW,GAAG,IAAlB;AACA,IAAIC,kBAAkB,GAAG,IAAzB;;AAEA,MAAMC,UAAU,GAAGC,MAAM,IAAIC,CAAC,IAAIC,cAAKC,OAAL,CAAaP,QAAb,EAAuBK,CAAvB,MAA8BD,MAAhE;;AAEA,MAAMI,aAAa,GAAGC,GAAG,IAAI;AAC5B,MAAI,CAACT,QAAL,EAAe,OAAO,IAAP;AAEf,MAAIA,QAAQ,KAAKS,GAAjB,EAAsB,OAAO,KAAP;;AAEtB,MAAI,CAAC,CAACP,kBAAN,EAA0B;AACzB,UAAMQ,oBAAoB,GAAGR,kBAAkB,CAACS,IAAnB,CAAwBR,UAAU,CAACM,GAAD,CAAlC,CAA7B;AAEA,WAAO,CAACC,oBAAR;AACA;;AAED,QAAME,aAAa,GAAGX,WAAW,CAACU,IAAZ,CAAiBR,UAAU,CAACM,GAAD,CAA3B,CAAtB;AAEA,SAAOG,aAAP;AACA,CAdD;;AAgBA,MAAMC,cAAc,GAAG,CAACJ,GAAD,EAAMK,YAAN,EAAoBC,mBAApB,KAA4C;AAClE,MAAI,CAACf,QAAL,EAAeA,QAAQ,GAAGS,GAAX;AACf,MAAI,CAACR,WAAD,IAAgBa,YAApB,EAAkCb,WAAW,GAAGa,YAAd;AAClC,MAAI,CAACZ,kBAAD,IAAuBa,mBAA3B,EACCb,kBAAkB,GAAGa,mBAArB;AACD,CALD;;AAOO,MAAMC,SAAS,GAAG,CAACP,GAAD,EAAMK,YAAN,EAAoBC,mBAApB,KAA4C;AACpEF,EAAAA,cAAc,CAACJ,GAAD,EAAMK,YAAN,EAAoBC,mBAApB,CAAd;AAEA,MAAIP,aAAa,CAACC,GAAD,CAAjB,EAAwB;;AAExB,QAAMQ,QAAQ,GAAGC,YAAGC,QAAH,CAAYV,GAAZ,CAAjB;;AACA,MAAIQ,QAAQ,CAACG,MAAT,EAAJ,EAAuB;AACtBF,gBAAGG,UAAH,CAAcZ,GAAd;AACA,GAFD,MAEO,IAAIQ,QAAQ,CAACK,WAAT,EAAJ,EAA4B;AAClC,UAAMC,KAAK,GAAGL,YAAGM,WAAH,CAAef,GAAf,CAAd;;AACA,SAAK,IAAIgB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAAK,CAACG,MAA1B,EAAkCD,CAAC,EAAnC,EACCT,SAAS,CAACV,cAAKqB,IAAL,CAAUlB,GAAV,EAAec,KAAK,CAACE,CAAD,CAApB,CAAD,CAAT;;AAEDhB,IAAAA,GAAG,KAAKT,QAAR,IAAoBkB,YAAGF,SAAH,CAAaP,GAAb,CAApB;AACA;AACD,CAfM","sourcesContent":["import path from 'path'\nimport fs from 'fs'\n\nlet rootPath = null\nlet ignoreFiles = null\nlet explicitlyDelFiles = null\n\nconst isSameFile = target => f => path.resolve(rootPath, f) === target\n\nconst notNeedRemove = dir => {\n\tif (!rootPath) return true\n\n\tif (rootPath === dir) return false\n\n\tif (!!explicitlyDelFiles) {\n\t\tconst inExplicitlyDelFiles = explicitlyDelFiles.some(isSameFile(dir))\n\n\t\treturn !inExplicitlyDelFiles\n\t}\n\n\tconst inIgnoreFiles = ignoreFiles.some(isSameFile(dir))\n\n\treturn inIgnoreFiles\n}\n\nconst initModuleVars = (dir, _ignoreFiles, _explicitlyDelFiles) => {\n\tif (!rootPath) rootPath = dir\n\tif (!ignoreFiles && _ignoreFiles) ignoreFiles = _ignoreFiles\n\tif (!explicitlyDelFiles && _explicitlyDelFiles)\n\t\texplicitlyDelFiles = _explicitlyDelFiles\n}\n\nexport const rmdirSync = (dir, _ignoreFiles, _explicitlyDelFiles) => {\n\tinitModuleVars(dir, _ignoreFiles, _explicitlyDelFiles)\n\n\tif (notNeedRemove(dir)) return\n\n\tconst fileinfo = fs.statSync(dir)\n\tif (fileinfo.isFile()) {\n\t\tfs.unlinkSync(dir)\n\t} else if (fileinfo.isDirectory()) {\n\t\tconst files = fs.readdirSync(dir)\n\t\tfor (let i = 0; i < files.length; i++)\n\t\t\trmdirSync(path.join(dir, files[i]))\n\n\t\tdir === rootPath || fs.rmdirSync(dir)\n\t}\n}\n"],"file":"utils.js"}