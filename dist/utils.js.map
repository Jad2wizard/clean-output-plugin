{"version":3,"sources":["../src/utils.js"],"names":["rootPath","ignoreFiles","notNeedRemove","dir","startsWith","relativePath","replace","inIgnoreFiles","some","f","rmdirSync","_ignoreFiles","fileinfo","fs","statSync","isFile","unlinkSync","isDirectory","files","readdirSync","i","length","path","join"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEA,IAAIA,QAAQ,GAAG,IAAf;AACA,IAAIC,WAAW,GAAG,IAAlB;;AAEA,MAAMC,aAAa,GAAGC,GAAG,IAAI;AAC5B,MAAI,CAACH,QAAD,IAAa,CAACG,GAAG,CAACC,UAAJ,CAAeJ,QAAf,CAAlB,EAA4C,OAAO,IAAP;AAE5C,QAAMK,YAAY,GAAGF,GAAG,CAACG,OAAJ,CAAYN,QAAZ,EAAsB,EAAtB,CAArB;AAEA,QAAMO,aAAa,GAAGN,WAAW,CAACO,IAAZ,CACrBC,CAAC,IACAA,CAAC,KAAKJ,YAAN,IACC,IAAGI,CAAE,EAAN,KAAYJ,YADZ,IAEC,IAAGI,CAAE,EAAN,KAAa,GAAEJ,YAAa,GAJR,CAAtB;AAOA,SAAOE,aAAP;AACA,CAbD;;AAeO,MAAMG,SAAS,GAAG,CAACP,GAAD,EAAMQ,YAAN,KAAuB;AAC/C,MAAI,CAACX,QAAL,EAAeA,QAAQ,GAAGG,GAAX;AACf,MAAI,CAACF,WAAD,IAAgBU,YAApB,EAAkCV,WAAW,GAAGU,YAAd;AAElC,MAAIT,aAAa,CAACC,GAAD,CAAjB,EAAwB;;AAExB,QAAMS,QAAQ,GAAGC,YAAGC,QAAH,CAAYX,GAAZ,CAAjB;;AACA,MAAIS,QAAQ,CAACG,MAAT,EAAJ,EAAuB;AACtBF,gBAAGG,UAAH,CAAcb,GAAd;AACA,GAFD,MAEO,IAAIS,QAAQ,CAACK,WAAT,EAAJ,EAA4B;AAClC,UAAMC,KAAK,GAAGL,YAAGM,WAAH,CAAehB,GAAf,CAAd;;AACA,SAAK,IAAIiB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAAK,CAACG,MAA1B,EAAkCD,CAAC,EAAnC,EACCV,SAAS,CAACY,cAAKC,IAAL,CAAUpB,GAAV,EAAee,KAAK,CAACE,CAAD,CAApB,CAAD,CAAT;;AAEDjB,IAAAA,GAAG,KAAKH,QAAR,IAAoBa,YAAGH,SAAH,CAAaP,GAAb,CAApB;AACA;AACD,CAhBM","sourcesContent":["import path from 'path'\nimport fs from 'fs'\n\nlet rootPath = null\nlet ignoreFiles = null\n\nconst notNeedRemove = dir => {\n\tif (!rootPath || !dir.startsWith(rootPath)) return true\n\n\tconst relativePath = dir.replace(rootPath, '')\n\n\tconst inIgnoreFiles = ignoreFiles.some(\n\t\tf =>\n\t\t\tf === relativePath ||\n\t\t\t`/${f}` === relativePath ||\n\t\t\t`/${f}` === `${relativePath}/`\n\t)\n\n\treturn inIgnoreFiles\n}\n\nexport const rmdirSync = (dir, _ignoreFiles) => {\n\tif (!rootPath) rootPath = dir\n\tif (!ignoreFiles && _ignoreFiles) ignoreFiles = _ignoreFiles\n\n\tif (notNeedRemove(dir)) return\n\n\tconst fileinfo = fs.statSync(dir)\n\tif (fileinfo.isFile()) {\n\t\tfs.unlinkSync(dir)\n\t} else if (fileinfo.isDirectory()) {\n\t\tconst files = fs.readdirSync(dir)\n\t\tfor (let i = 0; i < files.length; i++)\n\t\t\trmdirSync(path.join(dir, files[i]))\n\n\t\tdir === rootPath || fs.rmdirSync(dir)\n\t}\n}\n"],"file":"utils.js"}